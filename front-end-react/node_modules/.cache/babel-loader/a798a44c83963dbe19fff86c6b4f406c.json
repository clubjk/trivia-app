{"ast":null,"code":"import _classCallCheck from\"/Users/john/devops/trivia-app/front-end-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/john/devops/trivia-app/front-end-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/john/devops/trivia-app/front-end-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/john/devops/trivia-app/front-end-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _slicedToArray from\"/Users/john/devops/trivia-app/front-end-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Row,Col,Card,Button,Container,Form,ListGroup,Badge,Spinner,Jumbotron}from'react-bootstrap';import{CountdownCircleTimer}from'react-countdown-circle-timer';import{WebsocketEndpoint}from'./config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TRIVIA_STEP={STEP_GETSTARTED:{value:0},STEP_JOINGAME:{value:1},STEP_WAITING:{value:2},STEP_QUESTIONS:{value:3},STEP_GAMEOVER:{value:4}};function GetStarted(props){if(props.currentStep!==TRIVIA_STEP.STEP_GETSTARTED){return null;}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Get Started\"}),/*#__PURE__*/_jsx(Card.Text,{children:\"Click the button below to start a new game.\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:props.onNewGame,children:\"Create a New Game\"})]})});}function JoinGame(props){if(props.currentStep!==TRIVIA_STEP.STEP_JOINGAME){return null;}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Join Game\"}),/*#__PURE__*/_jsx(Card.Text,{children:\"You've been invited to join a game!\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:props.onJoinGame,children:\"Join\"})]})});}function Waiting(props){if(props.currentStep!==TRIVIA_STEP.STEP_WAITING){return null;}var invitelink=new URL(\"#newgame/\".concat(props.gameId),document.baseURI).href;var inviteBody=props.gameId?/*#__PURE__*/_jsxs(Card.Text,{children:[\"Share the link below with players joining the game\",/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:invitelink,readOnly:true}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:props.onStartGame,children:\"Start Game\"})]}):/*#__PURE__*/_jsx(Spinner,{animation:\"grow\",variant:\"secondary\"});return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Waiting for players\"}),inviteBody]})});}function Questions(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),activeButton=_useState2[0],setActiveButton=_useState2[1];var answerClick=function answerClick(key,id,option){props.onAnswer(id,option);setActiveButton(key);};if(props.currentStep!==TRIVIA_STEP.STEP_QUESTIONS){return null;}var questionBody=!props.question?/*#__PURE__*/_jsx(Spinner,{animation:\"grow\",variant:\"secondary\"}):/*#__PURE__*/_jsxs(Col,{lg:\"8\",children:[/*#__PURE__*/_jsx(\"b\",{children:props.question.question}),/*#__PURE__*/_jsx(\"div\",{className:\"d-grid gap-2\",children:props.question.options.map(function(option,i){var myKey=props.question.id+\"-\"+i;return/*#__PURE__*/_jsx(Button,{variant:activeButton===myKey?\"success\":\"secondary\",onClick:function onClick(){return answerClick(myKey,props.question.id,option);},size:\"lg\",block:true,children:option},myKey);})})]});return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Let's Play!\"}),questionBody]})});}function Players(props){if(!props.playerList){return null;}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Players\"}),/*#__PURE__*/_jsx(ListGroup,{children:props.playerList&&props.playerList.filter(function(player){return player.currentPlayer;}).map(function(player,i){return/*#__PURE__*/_jsxs(ListGroup.Item,{variant:\"primary\",className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:player.playerName},children:[\"\\u2B24 \",/*#__PURE__*/_jsx(\"span\",{className:\"small\",style:{color:\"Black\"},children:player.playerName})]}),/*#__PURE__*/_jsx(Badge,{pill:true,variant:\"dark\",children:player.score})]},player.connectionId);})}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(ListGroup,{children:props.playerList?props.playerList.filter(function(player){return!player.currentPlayer;}).map(function(player,i){return/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:player.playerName},children:[\"\\u2B24 \",/*#__PURE__*/_jsx(\"span\",{className:\"small\",style:{color:\"Black\"},children:player.playerName})]}),/*#__PURE__*/_jsx(Badge,{pill:true,variant:\"dark\",children:player.score})]},player.connectionId);}):/*#__PURE__*/_jsx(\"div\",{children:\"no players\"})})]})});}function GameOver(props){if(props.currentStep!==TRIVIA_STEP.STEP_GAMEOVER){return null;}var restart=function restart(){document.location=document.baseURI;};return/*#__PURE__*/_jsxs(Jumbotron,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Completed!\"}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return restart();},children:\"Restart\"})})]});}var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.ws=new WebSocket(WebsocketEndpoint);_this.state={currentStep:document.location.hash.startsWith('#newgame')?TRIVIA_STEP.STEP_JOINGAME:TRIVIA_STEP.STEP_GETSTARTED,connected:false,playerList:null,gameId:document.location.hash.startsWith('#newgame')?document.location.hash.replace('#newgame/',''):null,question:null};return _this;}_createClass(App,[{key:\"newGame\",value:function newGame(){var message=JSON.stringify({\"action\":\"newgame\"});this.ws.send(message);this.setState({currentStep:TRIVIA_STEP.STEP_WAITING});}},{key:\"joinGame\",value:function joinGame(){var message=JSON.stringify({\"action\":\"joingame\",\"gameid\":this.state.gameId});this.ws.send(message);this.setState({currentStep:TRIVIA_STEP.STEP_QUESTIONS});}},{key:\"startGame\",value:function startGame(){var message=JSON.stringify({\"action\":\"startgame\",\"gameid\":this.state.gameId});this.ws.send(message);this.setState({currentStep:TRIVIA_STEP.STEP_QUESTIONS});}},{key:\"answer\",value:function answer(questionId,_answer){var message=JSON.stringify({\"action\":\"answer\",\"gameid\":this.state.gameId,\"questionid\":questionId,\"answer\":_answer});this.ws.send(message);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.ws.onopen=function(){_this2.setState({connected:true});};this.ws.onmessage=function(evt){var message=JSON.parse(evt.data);switch(message.action){case\"gamecreated\":_this2.setState({gameId:message.gameId});break;case\"playerlist\":_this2.setState({playerList:message.players.splice(0)});break;case\"question\":_this2.setState({question:message.question});break;case\"gameover\":_this2.setState({currentStep:TRIVIA_STEP.STEP_GAMEOVER});break;default:break;}};this.ws.onclose=function(){_this2.setState({connected:false});};}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsx(Container,{className:\"p-3\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(GetStarted,{currentStep:this.state.currentStep,onNewGame:function onNewGame(){return _this3.newGame();}}),/*#__PURE__*/_jsx(JoinGame,{currentStep:this.state.currentStep,onJoinGame:function onJoinGame(){return _this3.joinGame();},gameId:this.state.gameId}),/*#__PURE__*/_jsx(Waiting,{currentStep:this.state.currentStep,onStartGame:function onStartGame(){return _this3.startGame();},gameId:this.state.gameId}),/*#__PURE__*/_jsx(Questions,{currentStep:this.state.currentStep,onAnswer:function onAnswer(questionId,answer){return _this3.answer(questionId,answer);},question:this.state.question}),/*#__PURE__*/_jsx(GameOver,{currentStep:this.state.currentStep}),this.state.connected?/*#__PURE__*/_jsx(\"small\",{children:\"\\uD83D\\uDFE9 connected\"}):/*#__PURE__*/_jsx(\"small\",{children:\"\\uD83D\\uDFE5 disconnected\"})]}),/*#__PURE__*/_jsxs(Col,{xs:3,children:[/*#__PURE__*/_jsx(Players,{playerList:this.state.playerList}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:this.state.question&&/*#__PURE__*/_jsx(CountdownCircleTimer,{size:120,isPlaying:true,duration:5,colors:[[\"#007bff\"]],children:function children(_ref){var remainingTime=_ref.remainingTime;return remainingTime;}},this.state.question.id)})]})]})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/john/devops/trivia-app/front-end-react/src/App.js"],"names":["React","useState","Row","Col","Card","Button","Container","Form","ListGroup","Badge","Spinner","Jumbotron","CountdownCircleTimer","WebsocketEndpoint","TRIVIA_STEP","STEP_GETSTARTED","value","STEP_JOINGAME","STEP_WAITING","STEP_QUESTIONS","STEP_GAMEOVER","GetStarted","props","currentStep","onNewGame","JoinGame","onJoinGame","Waiting","invitelink","URL","gameId","document","baseURI","href","inviteBody","onStartGame","Questions","activeButton","setActiveButton","answerClick","key","id","option","onAnswer","questionBody","question","options","map","i","myKey","Players","playerList","filter","player","currentPlayer","color","playerName","score","connectionId","GameOver","restart","location","App","ws","WebSocket","state","hash","startsWith","connected","replace","message","JSON","stringify","send","setState","questionId","answer","onopen","onmessage","evt","parse","data","action","players","splice","onclose","newGame","joinGame","startGame","remainingTime","Component"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Card, Button, Container, Form, ListGroup, Badge, Spinner, Jumbotron} from 'react-bootstrap';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport { WebsocketEndpoint } from './config'\n\nvar TRIVIA_STEP = {\n  STEP_GETSTARTED : {value: 0},\n  STEP_JOINGAME: {value: 1},\n  STEP_WAITING : {value: 2},\n  STEP_QUESTIONS : {value: 3},\n  STEP_GAMEOVER : {value: 4},\n};\n\nfunction GetStarted(props) {\n  if (props.currentStep !== TRIVIA_STEP.STEP_GETSTARTED) {\n    return null\n  }\n\n  return (<Card>\n    <Card.Body>\n      <Card.Title>Get Started</Card.Title>\n      <Card.Text>\n        Click the button below to start a new game.\n      </Card.Text>\n      <Button variant=\"primary\" onClick={props.onNewGame}>Create a New Game</Button>\n    </Card.Body>\n  </Card>);\n}\n\nfunction JoinGame(props) {\n  if (props.currentStep !== TRIVIA_STEP.STEP_JOINGAME) {\n    return null\n  }\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Join Game</Card.Title>\n        <Card.Text>\n          You've been invited to join a game!\n        </Card.Text>\n        <Button variant=\"primary\" onClick={props.onJoinGame}>Join</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction Waiting(props) {\n  if (props.currentStep !== TRIVIA_STEP.STEP_WAITING) {\n    return null\n  }\n  const invitelink = new URL(`#newgame/${props.gameId}`, document.baseURI).href;\n  const inviteBody = (props.gameId) ? (\n    <Card.Text>\n      Share the link below with players joining the game\n      <Form.Control type=\"text\" value={invitelink} readOnly />\n      <Button variant=\"primary\" onClick={props.onStartGame}>Start Game</Button>\n    </Card.Text>\n    ) : (\n      <Spinner animation=\"grow\" variant=\"secondary\" />\n  );\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Waiting for players</Card.Title>\n        {inviteBody}\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction Questions(props) {\n  const [activeButton, setActiveButton] = useState(null);\n\n  const answerClick = (key, id, option) => {\n    props.onAnswer(id, option);\n    setActiveButton(key);\n  }\n\n  if (props.currentStep !== TRIVIA_STEP.STEP_QUESTIONS) {\n    return null\n  }\n\n  var questionBody = !props.question ? (\n    <Spinner animation=\"grow\" variant=\"secondary\" />\n  ) : (\n    <Col lg=\"8\">\n      <b>{props.question.question}</b>\n      <div className=\"d-grid gap-2\">\n      {props.question.options.map((option, i) => {\n        const myKey = props.question.id + \"-\" + i;\n        return (\n          <Button\n           key={myKey}\n           variant={activeButton===myKey ? \"success\" : \"secondary\"}\n           onClick={() => answerClick(myKey, props.question.id, option)}\n           size=\"lg\" block>\n            {option}\n          </Button>\n        )\n      })}\n      </div>\n    </Col>\n  );\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Let's Play!</Card.Title>\n          {questionBody}\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction Players(props) {\n  if (!props.playerList) {\n    return null;\n  }\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Players</Card.Title>\n\n        <ListGroup>\n        {props.playerList && props.playerList.filter((player)=>player.currentPlayer).map((player, i) => {\n            return (<ListGroup.Item key={player.connectionId} variant=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n              <span style={{color:player.playerName}}>&#11044; <span className=\"small\" style={{color:\"Black\"}}>{player.playerName}</span></span>\n              <Badge pill variant=\"dark\">{player.score}</Badge>\n            </ListGroup.Item>)\n         })}\n         </ListGroup>\n         <p></p>\n         <ListGroup>\n        {props.playerList ? props.playerList.filter((player)=>!player.currentPlayer).map((player, i) => {\n            return (<ListGroup.Item key={player.connectionId} className=\"d-flex justify-content-between align-items-center\">\n              <span style={{color:player.playerName}}>&#11044; <span className=\"small\" style={{color:\"Black\"}}>{player.playerName}</span></span>\n              <Badge pill variant=\"dark\">{player.score}</Badge>\n            </ListGroup.Item>)\n         }) : <div>no players</div>}\n\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction GameOver(props) {\n  if (props.currentStep !== TRIVIA_STEP.STEP_GAMEOVER) {\n    return null\n  }\n  const restart = () => {\n    document.location = document.baseURI;\n  };\n\n  return (\n    <Jumbotron>\n    <h1>Game Completed!</h1>\n    <p>\n    </p>\n    <p>\n      <Button variant=\"primary\" onClick={()=>restart()}>Restart</Button>\n    </p>\n  </Jumbotron>\n  );\n}\n\nclass App extends React.Component {\n  ws = new WebSocket(WebsocketEndpoint);\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: document.location.hash.startsWith('#newgame') ? TRIVIA_STEP.STEP_JOINGAME : TRIVIA_STEP.STEP_GETSTARTED,\n      connected: false,\n      playerList: null,\n      gameId: document.location.hash.startsWith('#newgame') ? document.location.hash.replace('#newgame/', '') :  null,\n      question: null\n    };\n  }\n\n  newGame() {\n    var message = JSON.stringify({\"action\":\"newgame\"});\n    this.ws.send(message);\n    this.setState({currentStep: TRIVIA_STEP.STEP_WAITING});\n  }\n\n  joinGame() {\n    var message = JSON.stringify({\"action\":\"joingame\", \"gameid\": this.state.gameId});\n    this.ws.send(message);\n    this.setState({currentStep: TRIVIA_STEP.STEP_QUESTIONS});\n  }\n\n  startGame() {\n    var message = JSON.stringify({\"action\":\"startgame\", \"gameid\": this.state.gameId});\n    this.ws.send(message);\n    this.setState({currentStep: TRIVIA_STEP.STEP_QUESTIONS});\n  }\n\n  answer(questionId, answer) {\n    var message = JSON.stringify({\n      \"action\":\"answer\",\n      \"gameid\": this.state.gameId,\n      \"questionid\": questionId,\n      \"answer\": answer\n    });\n    this.ws.send(message);\n  }\n\n  componentDidMount() {\n      this.ws.onopen = () => {\n        this.setState({connected: true});\n      }\n\n      this.ws.onmessage = evt => {\n        const message = JSON.parse(evt.data)\n\n        switch(message.action) {\n          case \"gamecreated\":\n            this.setState({gameId: message.gameId});\n            break;\n          case \"playerlist\":\n            this.setState({playerList: message.players.splice(0)});\n            break;\n          case \"question\":\n            this.setState({question: message.question})\n            break;\n          case \"gameover\":\n            this.setState({currentStep: TRIVIA_STEP.STEP_GAMEOVER});\n            break;\n          default:\n            break;\n        }\n      }\n\n      this.ws.onclose = () => {\n        this.setState({connected: false});\n      }\n\n  }\n\n\n  render() {\n    return (\n      <Container className=\"p-3\">\n      <Row>\n      <Col>\n        <GetStarted currentStep={this.state.currentStep} onNewGame={() => this.newGame()} />\n        <JoinGame currentStep={this.state.currentStep} onJoinGame={() => this.joinGame()} gameId={this.state.gameId} />\n        <Waiting currentStep={this.state.currentStep} onStartGame={() => this.startGame()} gameId={this.state.gameId} />\n        <Questions currentStep={this.state.currentStep} onAnswer={(questionId, answer) => this.answer(questionId, answer)} question={this.state.question}  />\n        <GameOver currentStep={this.state.currentStep} />\n        {this.state.connected ? <small>&#129001; connected</small> :  <small>&#128997; disconnected</small>}\n      </Col>\n      <Col xs={3}>\n        <Players playerList={this.state.playerList}/>\n        <br/>\n        <div className=\"d-flex justify-content-center\">\n        {this.state.question && <CountdownCircleTimer\n          key={this.state.question.id}\n          size={120}\n          isPlaying\n          duration={5}\n          colors={[[\"#007bff\"]]}\n        >\n          {({ remainingTime }) => remainingTime}\n        </CountdownCircleTimer>}\n        </div>\n      </Col>\n\n      </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}